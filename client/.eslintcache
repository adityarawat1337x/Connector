[{"/home/archie/git/backEnd/Connector/client/src/index.js":"1","/home/archie/git/backEnd/Connector/client/src/App.js":"2","/home/archie/git/backEnd/Connector/client/src/Components/Layout/Navbar.js":"3","/home/archie/git/backEnd/Connector/client/src/Components/Layout/Landing.js":"4","/home/archie/git/backEnd/Connector/client/src/Components/Auth/Register.js":"5","/home/archie/git/backEnd/Connector/client/src/Components/Auth/Login.js":"6","/home/archie/git/backEnd/Connector/client/src/Redux/store.js":"7","/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/index.js":"8","/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/alert.js":"9","/home/archie/git/backEnd/Connector/client/src/Redux/types.js":"10","/home/archie/git/backEnd/Connector/client/src/Redux/Actions/alert.js":"11","/home/archie/git/backEnd/Connector/client/src/Components/Layout/Alert.js":"12","/home/archie/git/backEnd/Connector/client/src/Redux/Actions/auth.js":"13","/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/auth.js":"14","/home/archie/git/backEnd/Connector/client/src/Utils/setAuthToken.js":"15","/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/Dashboard.js":"16","/home/archie/git/backEnd/Connector/client/src/Components/Routing/PrivateRoute.js":"17","/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/profile.js":"18","/home/archie/git/backEnd/Connector/client/src/Redux/Actions/profile.js":"19","/home/archie/git/backEnd/Connector/client/src/Components/Layout/Spinner.js":"20","/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/CreateProfile.js":"21","/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/DashboaardActions.js":"22","/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/EditProfile.js":"23","/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/AddExperience.js":"24","/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/AddEducation.js":"25","/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/Experience.js":"26","/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/Education.js":"27"},{"size":319,"mtime":1607849551997,"results":"28","hashOfConfig":"29"},{"size":1963,"mtime":1608181760304,"results":"30","hashOfConfig":"29"},{"size":1430,"mtime":1608108967222,"results":"31","hashOfConfig":"29"},{"size":935,"mtime":1608109159844,"results":"32","hashOfConfig":"29"},{"size":3293,"mtime":1608022388268,"results":"33","hashOfConfig":"29"},{"size":1875,"mtime":1608022317268,"results":"34","hashOfConfig":"29"},{"size":304,"mtime":1607849487129,"results":"35","hashOfConfig":"29"},{"size":229,"mtime":1608040056663,"results":"36","hashOfConfig":"29"},{"size":358,"mtime":1607852413319,"results":"37","hashOfConfig":"29"},{"size":619,"mtime":1608196800277,"results":"38","hashOfConfig":"29"},{"size":362,"mtime":1607852199740,"results":"39","hashOfConfig":"29"},{"size":439,"mtime":1607851915417,"results":"40","hashOfConfig":"29"},{"size":2015,"mtime":1608110707016,"results":"41","hashOfConfig":"29"},{"size":1044,"mtime":1608196958290,"results":"42","hashOfConfig":"29"},{"size":242,"mtime":1608009478424,"results":"43","hashOfConfig":"29"},{"size":1836,"mtime":1608198251176,"results":"44","hashOfConfig":"29"},{"size":630,"mtime":1608039842902,"results":"45","hashOfConfig":"29"},{"size":779,"mtime":1608180461810,"results":"46","hashOfConfig":"29"},{"size":4719,"mtime":1608197556960,"results":"47","hashOfConfig":"29"},{"size":258,"mtime":1608110149989,"results":"48","hashOfConfig":"29"},{"size":6807,"mtime":1608179887924,"results":"49","hashOfConfig":"29"},{"size":645,"mtime":1608177203355,"results":"50","hashOfConfig":"29"},{"size":7965,"mtime":1608179907301,"results":"51","hashOfConfig":"29"},{"size":3382,"mtime":1608182190543,"results":"52","hashOfConfig":"29"},{"size":3439,"mtime":1608196018396,"results":"53","hashOfConfig":"29"},{"size":1465,"mtime":1608197440694,"results":"54","hashOfConfig":"29"},{"size":1302,"mtime":1608198072079,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17k0bsp",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},"/home/archie/git/backEnd/Connector/client/src/index.js",[],["118","119"],"/home/archie/git/backEnd/Connector/client/src/App.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Layout/Navbar.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Layout/Landing.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Auth/Register.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Auth/Login.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/store.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/index.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/alert.js",[],["120","121"],"/home/archie/git/backEnd/Connector/client/src/Redux/types.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/Actions/alert.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Layout/Alert.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/Actions/auth.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/auth.js",[],"/home/archie/git/backEnd/Connector/client/src/Utils/setAuthToken.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/Dashboard.js",["122"],"import React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteAccount, getCurrentProfile } from '../../Redux/Actions/profile';\nimport Spinner from '../Layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport Alert from '../Layout/Alert';\nimport DashboaardActions from './DashboaardActions';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const { user } = auth;\n  const profile = useSelector((state) => state.profile);\n  // const { profile, loading } = profile;\n  useEffect(() => {\n    dispatch(getCurrentProfile());\n  }, []);\n  return profile.loading && profile.profile === null ? (\n    <Spinner />\n  ) : (\n    <div className=\"container\">\n      <Alert />\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n      </p>\n      {profile.profile !== null ? (\n        <Fragment>\n          <DashboaardActions />\n          <Experience experience={profile.profile.experience} />\n          <Education education={profile.profile.education} />\n          <div className=\"my-2\">\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => dispatch(deleteAccount())}\n            >\n              <i className=\"fas fa-user-minus\">Delete My Account</i>\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet set up a profile, please add some info 💁 </p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/home/archie/git/backEnd/Connector/client/src/Components/Routing/PrivateRoute.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/Reducers/profile.js",[],"/home/archie/git/backEnd/Connector/client/src/Redux/Actions/profile.js",["123"],"import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED\n} from '../types';\n\n// Get current user's priofile\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const res = await axios.post('api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    const msg = edit ? 'Profile Updated' : 'Profile Created';\n    dispatch(setAlert(msg, 'success'));\n    if (!edit) {\n      history.push('/dashboard'); // in actions, we can't use <Redirect/>\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n\n// Add experience\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const res = await axios.put('api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard'); // in actions, we can't use <Redirect/>\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n\n// Add education\n\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const res = await axios.put('api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n\n// delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n\n// delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n\n// delete ACCOUNT AND PROFILE\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be undone')) {\n    try {\n      const res = await axios.delete('api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n\n      dispatch(setAlert('YOUR ACCOUNT HAS BEEN PERMANENTLY DELETED'));\n      // history.push('/dashboard');\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        dispatch({\n          type: PROFILE_ERROR,\n          payload: { msg: err.response.statusText, status: err.response.status }\n        });\n      }\n    }\n  }\n};\n","/home/archie/git/backEnd/Connector/client/src/Components/Layout/Spinner.js",["124"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt=\"Loading...\"\n    />\n  </Fragment>\n);\n","/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/CreateProfile.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/DashboaardActions.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/EditProfile.js",["125","126"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../Redux/Actions/profile';\nimport Alert from '../Layout/Alert';\n\nconst EditProfile = (props) => {\n  const dispatch = useDispatch();\n  const Profile = useSelector((state) => state.profile);\n  const { profile, loading } = Profile;\n  const [formData, setformData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    // getCurrentProfile();\n    setformData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.twitter,\n      instagram: loading || !profile.social ? '' : profile.social.twitter\n    });\n  }, [loading]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = (e) => {\n    setformData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(createProfile(formData, props.history, true));\n  };\n  return (\n    <section className=\"container\">\n      <Alert />\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n\n          <small className=\"form-text\">Optional</small>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link\n          to=\"/dashboard\"\n          className=\"btn btn-light my-1\"\n          href=\"dashboard.html\"\n        >\n          Go Back\n        </Link>\n      </form>\n    </section>\n  );\n};\n\nexport default withRouter(EditProfile);\n","/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/AddExperience.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Profile-Form/AddEducation.js",[],"/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/Experience.js",["127","128"],"import React, { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\n\nconst Experience = (props) => {\n  const experiences = props.experience.map((exp) => {\n    return (\n      <tr key={exp._id}>\n        <td>{exp.company}</td>\n        <td className=\"hide-sm\">{exp.title}</td>\n        <td>\n          <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{' '}\n          {exp.to === null ? (\n            'Now'\n          ) : (\n            <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\n          )}\n        </td>\n        <td>\n          <button className=\"btn btn-danger\">Delete</button>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Experience Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className=\"hide-sm\">Title</th>\n            <th className=\"hide-sm\">Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired\n  // deleteExperience: PropTypes.func.isRequired\n};\n\nexport default Experience;\n","/home/archie/git/backEnd/Connector/client/src/Components/Dashboard/Education.js",["129"],"import React, { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteEducation } from '../../Redux/Actions/profile';\n\nconst Education = (props) => {\n  const dispatch = useDispatch();\n  const educations = props.education.map((edu) => {\n    return (\n      <tr key={edu._id}>\n        <td>{edu.school}</td>\n        <td className=\"hide-sm\">{edu.degree}</td>\n        <td>\n          <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment> -{' '}\n          {edu.to === null ? (\n            'Now'\n          ) : (\n            <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>\n          )}\n        </td>\n        <td>\n          <button\n            onClick={() => dispatch(deleteEducation(edu._id))}\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Education Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className=\"hide-sm\">Degree</th>\n            <th className=\"hide-sm\">Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default Education;\n",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":19,"column":6,"nodeType":"138","endLine":19,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":168,"column":13,"nodeType":"142","messageId":"143","endLine":168,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":4,"column":1,"nodeType":"146","endLine":12,"endColumn":3},{"ruleId":"140","severity":1,"message":"147","line":4,"column":25,"nodeType":"142","messageId":"143","endLine":4,"endColumn":42},{"ruleId":"136","severity":1,"message":"148","line":45,"column":6,"nodeType":"138","endLine":45,"endColumn":15,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"150","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},{"ruleId":"140","severity":1,"message":"151","line":2,"column":23,"nodeType":"142","messageId":"143","endLine":2,"endColumn":34},{"ruleId":"140","severity":1,"message":"150","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],["152"],["153"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["154"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'getCurrentProfile' is defined but never used.","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array.",["155"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},"Update the dependencies array to be: [loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"162","text":"163"},[733,735],"[dispatch]",[1726,1735],"[loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]